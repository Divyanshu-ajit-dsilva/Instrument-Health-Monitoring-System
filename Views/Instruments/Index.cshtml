@model IEnumerable<Instrument>
@{
    ViewData["Title"] = "Instruments";
    var userRole = ViewBag.UserRole as string;
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2><i class="fas fa-cogs"></i> Instruments</h2>
    @if (userRole == "SuperUser" || userRole == "DataEntry")
    {
        <a asp-action="Create" class="btn btn-success">
            <i class="fas fa-plus"></i> Add New Instrument
        </a>
    }
</div>

<div class="row mb-3">
    <div class="col-md-12">
        <div class="card">
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-striped table-hover">
                        <thead class="table-dark">
                            <tr>
                                <th>Code</th>
                                <th>Name</th>
                                <th>Department</th>
                                <th>Status</th>
                                <th>Last Maintenance</th>
                                <th>Next Maintenance</th>
                                <th>Approved</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>@item.InstrumentCode</td>
                                    <td>@item.InstrumentName</td>
                                    <td>@item.Department</td>
                                    <td>
                                        <span class="badge @GetStatusBadgeClass(item.Status)">
                                            @item.Status
                                        </span>
                                    </td>
                                    <td>@item.LastMaintenanceDate.ToString("dd/MM/yyyy")</td>
                                    <td>
                                        @{
                                            var daysUntilMaintenance = (item.NextMaintenanceDate - DateTime.Now).Days;
                                            var maintenanceClass = daysUntilMaintenance <= 7 ? "text-danger fw-bold" :
                                            daysUntilMaintenance <= 30 ? "text-warning fw-bold" : "";
                                        }
                                        <span class="@maintenanceClass">
                                            @item.NextMaintenanceDate.ToString("dd/MM/yyyy")
                                        </span>
                                    </td>
                                    <td>
                                        @if (item.IsApproved)
                                        {
                                            <span class="badge bg-success">
                                                <i class="fas fa-check"></i> Yes
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-warning">
                                                <i class="fas fa-clock"></i> Pending
                                            </span>
                                        }
                                    </td>
                                    <td>
                                        <div class="btn-group" role="group">
                                            <a asp-action="Details" asp-route-id="@item.Id"
                                               class="btn btn-sm btn-outline-info" title="View Details">
                                                <i class="fas fa-eye"></i>
                                            </a>
                                            @if (userRole == "SuperUser")
                                            {
                                                <a asp-action="Edit" asp-route-id="@item.Id"
                                                   class="btn btn-sm btn-outline-primary" title="Edit">
                                                    <i class="fas fa-edit"></i>
                                                </a>
                                                <button type="button" class="btn btn-sm btn-outline-danger"
                                                        title="Delete" onclick="confirmDelete(@item.Id)">
                                                    <i class="fas fa-trash"></i>
                                                </button>
                                            }
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@if (!Model.Any())
{
    <div class="alert alert-info text-center">
        <i class="fas fa-info-circle"></i> No instruments found.
    </div>
}

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this instrument?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <form id="deleteForm" method="post" style="display: inline;">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-danger">Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>

@functions {
    string GetStatusBadgeClass(HealthStatus status)
    {
        return status switch
        {
            HealthStatus.Excellent => "bg-success",
            HealthStatus.Good => "bg-info",
            HealthStatus.Fair => "bg-warning",
            HealthStatus.Poor => "bg-danger",
            HealthStatus.Critical => "bg-danger",
            HealthStatus.OutOfService => "bg-dark",
            _ => "bg-secondary"
        };
    }
}

@section Scripts {
    <script>
        function confirmDelete(id) {
            document.getElementById('deleteForm').action = '@Url.Action("Delete", "Instruments")/' + id;
            var deleteModal = new bootstrap.Modal(document.getElementById('deleteModal'));
            deleteModal.show();
        }
    </script>
}
